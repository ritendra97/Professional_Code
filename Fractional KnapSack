//Fractional KnapSack
import java.util.*;

class ItemComparator implements Comparator<Item>{
	
	public int compare(Item o1, Item o2) {
		
		double r1 = (double)(o1.value)/(double)(o1.weight);
		double r2 = (double)(o2.value)/(double)(o2.weight);
		if(r1<r2)
			return 1;
		else if(r1>r2)
			return -1;
		else
		    return 0;
		
	}

}

class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}

class Solution {

	public static double fractionalKnapsack(int W, Item arr[], int n) {
        
		Arrays.sort(arr, new ItemComparator());
		
		double curr_weight =0;
		double ans =0;
		for(int i=0;i<arr.length;i++) {
			
			if(curr_weight+arr[i].weight<=W) {
				
				ans+=arr[i].value;
				curr_weight+=arr[i].weight;
			}else {
				
				double remain_w = W-curr_weight;
				ans+=(double)arr[i].value/(double)arr[i].weight*(double)remain_w;
				break;
			}
		}
		
		return ans;
	}
	public static void main(String[] args) {	
	
		Item arr[] = {new Item(60,10),new Item(60,10),new Item(60,10)};
		System.out.println(fractionalKnapsack(50,arr,3));
	}
}
